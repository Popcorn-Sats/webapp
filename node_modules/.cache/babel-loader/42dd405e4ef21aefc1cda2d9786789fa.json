{"ast":null,"code":"var _jsxFileName = \"/Users/Zane/bitcoinprojects/luca/Client/src/components/Sidebar/AddTransaction.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Formik, Field } from 'formik';\nimport DatePicker from 'react-datepicker';\nimport Server from '../../utils/server';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button, Input, Label, Select, Textarea } from '@windmill/react-ui';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction AddTransaction(props) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  let history = useHistory();\n\n  function openModal() {\n    setIsModalOpen(true);\n  }\n\n  function closeModal() {\n    setIsModalOpen(false);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-6 my-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: openModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Add Transaction\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml-2\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isModalOpen,\n    onClose: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      blockId: '',\n      txid: '',\n      balance_change: '',\n      address: '',\n      network_fee: '',\n      size: '',\n      description: '',\n      account: '',\n      categoryid: '',\n      transactiontypeId: '',\n      payee: ''\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.balance_change) {\n        errors.balance_change = 'Required';\n      }\n\n      if (!values.account) {\n        errors.account = 'Required';\n      }\n\n      if (!values.payee) {\n        errors.payee = 'Required';\n      }\n\n      return errors;\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        Server.newAccount(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n        closeModal();\n        history.push('/app/accounts'); // TODO: make sure the accounts data pulls fresh from DB (actually, res should send new object back)\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n    /* and other goodies */\n\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \"Add transaction\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid gap-6 mb-8 md:grid-cols-2 bg-white rounded-lg shadow-md dark:bg-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 37\n    }\n  }, \"Sender\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"mt-1\",\n    placeholder: \"Wasabi Wallet\",\n    name: \"name\",\n    id: \"name\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 37\n    }\n  }), errors.name && touched.name && errors.name), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 37\n    }\n  }, \"Recipient\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"mt-1\",\n    placeholder: \"Citadel21\",\n    name: \"xpub\",\n    id: \"xpub\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.xpub,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 37\n    }\n  }), errors.xpub && touched.xpub && errors.xpub), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 37\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"mt-1\",\n    placeholder: \"TODO: Datepicker. Format: Date e.g 12/12/2012\",\n    name: \"birthday\",\n    id: \"birthday\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.birthday,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 37\n    }\n  }), errors.birthday && touched.birthday && errors.birthday), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 37\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"mt-1\",\n    rows: \"3\",\n    placeholder: \"123,098\",\n    name: \"notes\",\n    id: \"notes\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.notes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 37\n    }\n  }), errors.notes && touched.notes && errors.notes), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 37\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"mt-1\",\n    rows: \"3\",\n    placeholder: \"123,098\",\n    name: \"notes\",\n    id: \"notes\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.notes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 37\n    }\n  }), errors.notes && touched.notes && errors.notes), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 37\n    }\n  }, \"Fee\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"mt-1\",\n    rows: \"3\",\n    placeholder: \"172\",\n    name: \"notes\",\n    id: \"notes\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.notes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 37\n    }\n  }), errors.notes && touched.notes && errors.notes), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 37\n    }\n  }, \"BlockID\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"mt-1\",\n    rows: \"3\",\n    placeholder: \"123,098\",\n    name: \"notes\",\n    id: \"notes\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.notes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 37\n    }\n  }), errors.notes && touched.notes && errors.notes), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 37\n    }\n  }, \"TXID\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"mt-1\",\n    rows: \"3\",\n    placeholder: \"172\",\n    name: \"notes\",\n    id: \"notes\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.notes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 37\n    }\n  }), errors.notes && touched.notes && errors.notes), /*#__PURE__*/React.createElement(Label, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 37\n    }\n  }, \"Memo\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"mt-1\",\n    rows: \"3\",\n    placeholder: \"Write any useful information about your account here.\",\n    name: \"notes\",\n    id: \"notes\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.notes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 37\n    }\n  }), errors.notes && touched.notes && errors.notes), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    layout: \"outline\",\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 33\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hidden sm:block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 33\n    }\n  }, \"Create Transaction\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    layout: \"outline\",\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 33\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block w-full sm:hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    size: \"large\",\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 33\n    }\n  }, \"Create Transaction\")))))));\n}\n\nexport default AddTransaction;","map":{"version":3,"sources":["/Users/Zane/bitcoinprojects/luca/Client/src/components/Sidebar/AddTransaction.js"],"names":["React","useState","useHistory","Formik","Field","DatePicker","Server","Modal","ModalHeader","ModalBody","ModalFooter","Button","Input","Label","Select","Textarea","AddTransaction","props","isModalOpen","setIsModalOpen","history","openModal","closeModal","blockId","txid","balance_change","address","network_fee","size","description","account","categoryid","transactiontypeId","payee","values","errors","setSubmitting","setTimeout","newAccount","JSON","stringify","push","touched","handleChange","handleBlur","handleSubmit","isSubmitting","name","xpub","birthday","notes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Formik, Field } from 'formik'\nimport DatePicker from 'react-datepicker'\nimport Server from '../../utils/server'\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button, Input, Label, Select, Textarea } from '@windmill/react-ui'\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction AddTransaction(props) {\n  const [isModalOpen, setIsModalOpen] = useState(false)\n\n  let history = useHistory()\n\n  function openModal() {\n    setIsModalOpen(true)\n  }\n\n  function closeModal() {\n    setIsModalOpen(false)\n  }\n\n  return (\n      <div className=\"px-6 my-6\">\n        <Button onClick={openModal}>\n          Add Transaction\n          <span className=\"ml-2\" aria-hidden=\"true\">\n            +\n          </span>\n        </Button>\n        <Modal isOpen={isModalOpen} onClose={closeModal}>\n            <Formik\n                initialValues={\n                    { \n                        blockId: '',\n                        txid: '', \n                        balance_change: '',\n                        address: '',\n                        network_fee: '',\n                        size: '',\n                        description: '',\n                        account: '',\n                        categoryid: '',\n                        transactiontypeId: '',\n                        payee: ''\n                    }\n                }\n                validate={values => {\n                    const errors = {};\n                    if (!values.balance_change) {\n                        errors.balance_change = 'Required';\n                    } \n                    if (!values.account) {\n                        errors.account = 'Required';\n                    }\n                    if (!values.payee) {\n                        errors.payee = 'Required';\n                    }\n                    return errors;\n                }}\n                onSubmit={(values, { setSubmitting }) => {\n                    setTimeout(() => {\n                        Server.newAccount(JSON.stringify(values, null, 2));\n                        setSubmitting(false);\n                        closeModal();\n                        history.push('/app/accounts');\n                        // TODO: make sure the accounts data pulls fresh from DB (actually, res should send new object back)\n                    }, 400)\n                }}\n                \n            >\n\n                {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                    <form onSubmit={handleSubmit}>\n                        <ModalHeader>Add transaction</ModalHeader>\n                        <ModalBody>\n                            <div className=\"grid gap-6 mb-8 md:grid-cols-2 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n\n                                <Label>\n                                    <span>Sender</span>\n                                    <Input \n                                        className=\"mt-1\" \n                                        placeholder=\"Wasabi Wallet\" \n                                        name=\"name\" \n                                        id=\"name\" \n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.name} \n                                    />\n                                    {errors.name && touched.name && errors.name}\n                                </Label>\n\n                                <Label>\n                                    <span>Recipient</span>\n                                    <Input \n                                        className=\"mt-1\" \n                                        placeholder=\"Citadel21\" \n                                        name=\"xpub\" \n                                        id=\"xpub\" \n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.xpub} \n                                    />\n                                    \n                                    {errors.xpub && touched.xpub && errors.xpub}\n                                </Label>\n\n                                {/* TODO: DATEPICKER */}\n                                <Label className=\"mt-4\">\n                                    <span>Date</span>\n                                    {/*<DatePicker\n                                        className=\"mt-1\" \n                                        name=\"birthday\" \n                                        id=\"birthday\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.birthday} \n                                    />*/}\n                                    <Input \n                                        className=\"mt-1\" \n                                        placeholder=\"TODO: Datepicker. Format: Date e.g 12/12/2012\" \n                                        name=\"birthday\" \n                                        id=\"birthday\" \n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.birthday} \n                                    />\n                                    {errors.birthday && touched.birthday && errors.birthday}\n                                </Label>\n\n                                <Label className=\"mt-4\">\n                                    <span>Category</span>\n                                    <Input \n                                        className=\"mt-1\" \n                                        rows=\"3\" \n                                        placeholder=\"123,098\" \n                                        name=\"notes\" \n                                        id=\"notes\" \n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.notes} \n                                    />\n                                    {errors.notes && touched.notes && errors.notes}\n                                </Label>\n\n                                <Label className=\"mt-4\">\n                                    <span>Amount</span>\n                                    <Input \n                                        className=\"mt-1\" \n                                        rows=\"3\" \n                                        placeholder=\"123,098\" \n                                        name=\"notes\" \n                                        id=\"notes\" \n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.notes} \n                                    />\n                                    {errors.notes && touched.notes && errors.notes}\n                                </Label>\n\n                                <Label className=\"mt-4\">\n                                    <span>Fee</span>\n                                    <Input \n                                        className=\"mt-1\" \n                                        rows=\"3\" \n                                        placeholder=\"172\" \n                                        name=\"notes\" \n                                        id=\"notes\" \n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.notes} \n                                    />\n                                    {errors.notes && touched.notes && errors.notes}\n                                </Label>\n\n                                <Label className=\"mt-4\">\n                                    <span>BlockID</span>\n                                    <Input \n                                        className=\"mt-1\" \n                                        rows=\"3\" \n                                        placeholder=\"123,098\" \n                                        name=\"notes\" \n                                        id=\"notes\" \n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.notes} \n                                    />\n                                    {errors.notes && touched.notes && errors.notes}\n                                </Label>\n\n                                <Label className=\"mt-4\">\n                                    <span>TXID</span>\n                                    <Input \n                                        className=\"mt-1\" \n                                        rows=\"3\" \n                                        placeholder=\"172\" \n                                        name=\"notes\" \n                                        id=\"notes\" \n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.notes} \n                                    />\n                                    {errors.notes && touched.notes && errors.notes}\n                                </Label>\n\n                                <Label className=\"mt-4\">\n                                    <span>Memo</span>\n                                    <Input \n                                        className=\"mt-1\" \n                                        rows=\"3\" \n                                        placeholder=\"Write any useful information about your account here.\" \n                                        name=\"notes\" \n                                        id=\"notes\" \n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.notes} \n                                    />\n                                    {errors.notes && touched.notes && errors.notes}\n                                </Label>\n                                <br />\n                            </div>\n                        </ModalBody>\n                        <ModalFooter>\n                            {/* I don't like this approach. Consider passing a prop to ModalFooter\n                            * that if present, would duplicate the buttons in a way similar to this.\n                            * Or, maybe find some way to pass something like size=\"large md:regular\"\n                            * to Button\n                            */}\n                            <div className=\"hidden sm:block\">\n                                <Button layout=\"outline\" onClick={closeModal}>\n                                    Cancel\n                                </Button>\n                            </div>\n                            <div className=\"hidden sm:block\">\n                                <Button type=\"submit\" disabled={isSubmitting}>Create Transaction</Button>\n                            </div>\n                            <div className=\"block w-full sm:hidden\">\n                                <Button block size=\"large\" layout=\"outline\" onClick={closeModal}>\n                                    Cancel\n                                </Button>\n                            </div>\n                            <div className=\"block w-full sm:hidden\">\n                                <Button block size=\"large\" type=\"submit\" disabled={isSubmitting}>\n                                    Create Transaction\n                                </Button>\n                            </div>\n                        </ModalFooter>\n                    </form>\n                )}\n            </Formik>\n        </Modal>\n      </div>\n  )\n}\n\nexport default AddTransaction"]},"metadata":{},"sourceType":"module"}