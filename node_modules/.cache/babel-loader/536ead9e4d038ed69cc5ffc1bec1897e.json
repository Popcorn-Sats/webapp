{"ast":null,"code":"var _jsxFileName = \"/Users/Zane/bitcoinprojects/luca/Client/src/components/Transaction.js\";\nimport React from 'react';\nimport { EditIcon, MenuIcon } from '../icons';\nimport Server from '../utils/server';\nimport { TableCell, TableRow, Button, Input } from '@windmill/react-ui';\nexport class Transaction extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editView: false,\n      transaction: this.props.transaction,\n      savedTransaction: this.props.savedTransaction\n    };\n    this.onEditButtonClicked = this.onEditButtonClicked.bind(this);\n    this.onSubmitButtonClicked = this.onSubmitButtonClicked.bind(this);\n    this.cancelEdit = this.cancelEdit.bind(this);\n    this.updatePayee = this.updatePayee.bind(this);\n    this.updateDescription = this.updateDescription.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n  }\n\n  hasAllRequiredFields() {\n    const transaction = this.state.transaction;\n\n    if (!transaction.payee || !transaction.category) {\n      return false;\n    }\n\n    return true;\n  }\n\n  hasChanges() {\n    const transaction = this.state.transaction;\n    const savedTransaction = this.state.savedTransaction;\n\n    if (!savedTransaction) {\n      return false;\n    }\n\n    if (transaction.payee === savedTransaction.payee && transaction.description === savedTransaction.description && transaction.category === savedTransaction.category) {\n      return false;\n    }\n\n    return true;\n  }\n\n  onEditButtonClicked() {\n    this.setState({\n      editView: !this.state.editView\n    });\n  }\n\n  updatePayee(event) {\n    const transaction = JSON.parse(JSON.stringify(this.state.transaction));\n    transaction.payee = event.target.value;\n    this.setState({\n      transaction: transaction\n    });\n    console.log(this.state.transaction.payee);\n  }\n\n  updateDescription(event) {\n    const transaction = JSON.parse(JSON.stringify(this.state.transaction));\n    transaction.description = event.target.value;\n    this.setState({\n      transaction: transaction\n    });\n  }\n\n  updateCategory(event) {\n    const transaction = JSON.parse(JSON.stringify(this.state.transaction));\n    transaction.category = event.target.value;\n    this.setState({\n      transaction: transaction\n    });\n  }\n\n  cancelEdit() {\n    this.setState({\n      transaction: this.state.savedTransaction,\n      editView: !this.state.editView\n    });\n  }\n\n  onSubmitButtonClicked() {\n    Server.editTransaction(JSON.parse(JSON.stringify(this.state.transaction))).then(transaction => {\n      this.setState({\n        savedTransaction: this.state.transaction,\n        editView: !this.state.editView\n      });\n    });\n  }\n\n  renderDescription() {\n    let descriptionField;\n\n    if (this.state.transaction.description != null) {\n      descriptionField = this.state.transaction.description;\n    } else if (this.state.transaction.txid) {\n      descriptionField = `TXID: ${this.state.transaction.txid}`;\n    } else {\n      descriptionField = \"Manual transaction\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, descriptionField);\n  }\n\n  renderSender() {\n    let payeeField;\n\n    if (this.state.transaction.transactionledgers[1].account.name != null) {\n      payeeField = this.state.transaction.description;\n    } else if (this.state.transaction.transactionledgers[1].account.name) {\n      payeeField = `Address: ${this.state.transaction.transactionledgers[1].address}`;\n    } else {\n      payeeField = \"\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, payeeField);\n  }\n\n  renderRecipient() {\n    let payeeField;\n\n    if (this.state.transaction.transactionledgers[0].account.name != null) {\n      payeeField = this.state.transaction.transactionledgers[0].account.name;\n    } else if (this.state.transaction.transactionledgers[0].address) {\n      payeeField = `Address: ${this.state.transaction.transactionledgers[0].address}`;\n    } else {\n      payeeField = \"\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }, payeeField);\n  }\n\n  renderButtons() {\n    let saveButton, cancelButton, deleteButton;\n\n    if (this.hasChanges() && this.hasAllRequiredFields()) {\n      saveButton = /*#__PURE__*/React.createElement(Button, {\n        \"aria-label\": \"Delete\",\n        block: true,\n        size: \"small\",\n        onClick: this.onSubmitButtonClicked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 20\n        }\n      }, \"Save\");\n    } else {\n      saveButton = /*#__PURE__*/React.createElement(Button, {\n        disabled: true,\n        \"aria-label\": \"Delete\",\n        block: true,\n        size: \"small\",\n        onClick: this.onSubmitButtonClicked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 20\n        }\n      }, \"Save\");\n    }\n\n    if (this.hasChanges()) {\n      // Note: need to revert state on cancel\n      cancelButton = /*#__PURE__*/React.createElement(Button, {\n        layout: \"outline\",\n        \"aria-label\": \"Cancel\",\n        onClick: this.cancelEdit,\n        block: true,\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 22\n        }\n      }, \"Cancel\");\n    } else {\n      cancelButton = /*#__PURE__*/React.createElement(Button, {\n        layout: \"outline\",\n        \"aria-label\": \"Cancel\",\n        onClick: this.onEditButtonClicked,\n        block: true,\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 22\n        }\n      }, \"Cancel\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex items-center space-x-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }, saveButton, cancelButton);\n  }\n\n  render() {\n    const editClicked = this.state.editView;\n\n    if (editClicked) {\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: this.props.transaction.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      }, new Date(this.state.transaction.block.date).toLocaleDateString())), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        className: \"text-sm\",\n        value: this.state.transaction.transactionledgers[1].account.name\n        /*TODO: Find these objects by transactiontype in case order gets whacked*/\n        ,\n        onChange: this.updatePayee,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        className: \"text-sm\",\n        value: this.state.transaction.transactionledgers[0].account.name\n        /*TODO: Catch if there are no transaction ledgers. This shouldn't happen, but need to just in case*/\n        ,\n        onChange: this.updatePayee,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        className: \"text-sm\",\n        value: this.state.transaction.description,\n        onChange: this.updateDescription,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        className: \"text-sm\",\n        value: this.state.transaction.category.name,\n        onChange: this.updateCategory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }\n      }, this.props.transaction.balance_change, \" sats\")), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }\n      }, this.renderButtons()));\n    }\n\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: this.props.transaction.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, new Date(this.state.transaction.block.date).toLocaleDateString())), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, this.renderSender()), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }\n    }, this.renderRecipient()), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, this.renderDescription()), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, \" \", this.state.transaction.category.name)), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, this.props.transaction.balance_change, \" sats\")), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex items-center space-x-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      layout: \"link\",\n      size: \"icon\",\n      \"aria-label\": \"Edit\",\n      onClick: this.onEditButtonClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      className: \"w-5 h-5\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      layout: \"link\",\n      size: \"icon\",\n      \"aria-label\": \"Delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MenuIcon, {\n      className: \"w-5 h-5\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n} // export default Transaction","map":{"version":3,"sources":["/Users/Zane/bitcoinprojects/luca/Client/src/components/Transaction.js"],"names":["React","EditIcon","MenuIcon","Server","TableCell","TableRow","Button","Input","Transaction","Component","constructor","props","state","editView","transaction","savedTransaction","onEditButtonClicked","bind","onSubmitButtonClicked","cancelEdit","updatePayee","updateDescription","updateCategory","hasAllRequiredFields","payee","category","hasChanges","description","setState","event","JSON","parse","stringify","target","value","console","log","editTransaction","then","renderDescription","descriptionField","txid","renderSender","payeeField","transactionledgers","account","name","address","renderRecipient","renderButtons","saveButton","cancelButton","deleteButton","render","editClicked","id","Date","block","date","toLocaleDateString","balance_change"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { EditIcon, MenuIcon } from '../icons'\nimport Server from '../utils/server'\n\nimport {\n    TableCell,\n    TableRow,\n    Button,\n    Input,\n  } from '@windmill/react-ui'\n\nexport class Transaction extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      editView: false,\n      transaction: this.props.transaction,\n      savedTransaction: this.props.savedTransaction\n    }\n    this.onEditButtonClicked = this.onEditButtonClicked.bind(this)\n    this.onSubmitButtonClicked = this.onSubmitButtonClicked.bind(this)\n    this.cancelEdit = this.cancelEdit.bind(this)\n\n    this.updatePayee = this.updatePayee.bind(this);\n    this.updateDescription = this.updateDescription.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n  }\n\n  hasAllRequiredFields() {\n    const transaction = this.state.transaction;\n    if (!transaction.payee || !transaction.category) {\n      return false;\n    }\n    return true;\n  }\n\n  hasChanges() {\n    const transaction = this.state.transaction;\n    const savedTransaction = this.state.savedTransaction;\n    if (!savedTransaction) {\n      return false;\n    }\n\n    if (transaction.payee === savedTransaction.payee &&\n        transaction.description === savedTransaction.description &&\n        transaction.category === savedTransaction.category) {\n      return false;\n    }\n\n    return true;\n  }\n\n  onEditButtonClicked(){\n    this.setState({\n      editView: !this.state.editView\n    })\n  }\n\n  updatePayee(event) {\n    const transaction = JSON.parse(JSON.stringify(this.state.transaction))\n    transaction.payee = event.target.value\n    this.setState({transaction: transaction})\n    console.log(this.state.transaction.payee)\n  }\n\n  updateDescription(event) {\n    const transaction = JSON.parse(JSON.stringify(this.state.transaction))\n    transaction.description = event.target.value\n    this.setState({transaction: transaction})\n  }\n\n  updateCategory(event) {\n    const transaction = JSON.parse(JSON.stringify(this.state.transaction))\n    transaction.category = event.target.value\n    this.setState({transaction: transaction})\n  }\n\n  cancelEdit() {\n    this.setState({\n      transaction: this.state.savedTransaction,\n      editView: !this.state.editView\n    })\n  }\n\n  onSubmitButtonClicked() {\n    Server.editTransaction(JSON.parse(JSON.stringify(this.state.transaction))).then(transaction => {\n      this.setState({\n        savedTransaction: this.state.transaction,\n        editView: !this.state.editView\n      })\n    })\n  }\n\n  renderDescription() {\n    let descriptionField\n    if (this.state.transaction.description != null) {\n      descriptionField = this.state.transaction.description\n    } else if (this.state.transaction.txid) {\n      descriptionField = `TXID: ${this.state.transaction.txid}`\n    } else {\n      descriptionField = \"Manual transaction\"\n    }\n    return (\n      <span className=\"text-sm\"> \n        {descriptionField}\n      </span>\n    )\n  }\n\n  renderSender() {\n    let payeeField\n    if (this.state.transaction.transactionledgers[1].account.name != null) {\n      payeeField = this.state.transaction.description\n    } else if (this.state.transaction.transactionledgers[1].account.name) {\n      payeeField = `Address: ${this.state.transaction.transactionledgers[1].address}`\n    } else {\n      payeeField = \"\"\n    }\n    return (\n      <span className=\"text-sm\"> \n        {payeeField}\n      </span>\n    )\n  }\n\n  renderRecipient() {\n    let payeeField\n    if (this.state.transaction.transactionledgers[0].account.name != null) {\n      payeeField = this.state.transaction.transactionledgers[0].account.name\n    } else if (this.state.transaction.transactionledgers[0].address) {\n      payeeField = `Address: ${this.state.transaction.transactionledgers[0].address}`\n    } else {\n      payeeField = \"\"\n    }\n    return (\n      <span className=\"text-sm\"> \n        {payeeField}\n      </span>\n    )\n  }\n\n  renderButtons() {\n    let saveButton, cancelButton, deleteButton\n\n    if (this.hasChanges() && this.hasAllRequiredFields()){\n      saveButton = <Button aria-label=\"Delete\" block size=\"small\" onClick={this.onSubmitButtonClicked}>Save</Button>\n    } else {\n      saveButton = <Button disabled aria-label=\"Delete\" block size=\"small\" onClick={this.onSubmitButtonClicked}>Save</Button>\n    }\n\n    if (this.hasChanges()) {\n      // Note: need to revert state on cancel\n      cancelButton = <Button layout=\"outline\" aria-label=\"Cancel\" onClick={this.cancelEdit} block size=\"small\">Cancel</Button>\n    } else {\n      cancelButton = <Button layout=\"outline\" aria-label=\"Cancel\" onClick={this.onEditButtonClicked} block size=\"small\">Cancel</Button>\n    }\n\n    return (\n      <div className=\"flex items-center space-x-4\">\n        {saveButton}\n        {cancelButton}\n      </div>\n    )\n  }\n\n  render() {\n    const editClicked = this.state.editView\n\n    if (editClicked) {\n      return (\n        <TableRow key={this.props.transaction.id}>\n          <TableCell>\n            <span className=\"text-sm\">{new Date(this.state.transaction.block.date).toLocaleDateString()}</span>\n          </TableCell>\n          <TableCell>\n            <Input \n              className=\"text-sm\"\n              value={this.state.transaction.transactionledgers[1].account.name /*TODO: Find these objects by transactiontype in case order gets whacked*/}\n              onChange={this.updatePayee}\n            />\n          </TableCell>\n          <TableCell>\n            <Input \n              className=\"text-sm\"\n              value={this.state.transaction.transactionledgers[0].account.name /*TODO: Catch if there are no transaction ledgers. This shouldn't happen, but need to just in case*/}\n              onChange={this.updatePayee}\n            />\n          </TableCell>\n          <TableCell>\n            <Input \n              className=\"text-sm\" \n              value={this.state.transaction.description} \n              onChange={this.updateDescription} \n            />\n          </TableCell>\n          <TableCell>\n            <Input \n              className=\"text-sm\"\n              value={this.state.transaction.category.name}\n              onChange={this.updateCategory}\n            />\n          </TableCell>\n          <TableCell>\n            <span className=\"text-sm\">{this.props.transaction.balance_change} sats</span>\n          </TableCell>\n          <TableCell>\n            {this.renderButtons()}\n          </TableCell>\n        </TableRow>\n      )\n    }\n\n    return (\n      <TableRow key={this.props.transaction.id}>\n          <TableCell>\n            <span className=\"text-sm\">{new Date(this.state.transaction.block.date).toLocaleDateString()}</span>\n          </TableCell>\n          <TableCell>\n            {this.renderSender()}\n          </TableCell>\n          <TableCell>\n            {this.renderRecipient()}\n          </TableCell>\n          <TableCell>\n            {this.renderDescription()}\n          </TableCell>\n          <TableCell>\n            <span className=\"text-sm\"> {this.state.transaction.category.name}</span>\n          </TableCell>\n          <TableCell>\n            <span className=\"text-sm\">{this.props.transaction.balance_change} sats</span>\n          </TableCell>\n          <TableCell>\n            <div className=\"flex items-center space-x-4\">\n              <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\" onClick={this.onEditButtonClicked}>\n                <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n              </Button>\n              <Button layout=\"link\" size=\"icon\" aria-label=\"Delete\">\n                <MenuIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n              </Button>\n            </div>\n          </TableCell>\n        </TableRow>\n      )\n  }\n}\n\n// export default Transaction"]},"metadata":{},"sourceType":"module"}