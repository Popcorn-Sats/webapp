{"ast":null,"code":"var _jsxFileName = \"/Users/Zane/bitcoinprojects/luca/5_React/src/components/Transactions.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Transaction } from './Transaction';\nimport { TableBody, TableContainer, Table, TableHeader, TableCell, TableFooter, Pagination } from '@windmill/react-ui';\n\nfunction Transactions(props) {\n  // setup pages control for every table\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]); // pagination setup\n\n  const resultsPerPage = 10;\n  const totalResults = props.transactions.length; // pagination change control\n\n  function onPageChange(p) {\n    setPage(p);\n  } // on page change, load new sliced data\n  // here you would make another server request for new data\n\n\n  useEffect(() => {\n    setData(props.transactions.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page]);\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \"From\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, \"To\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, props.transactions.map(transaction => {\n    return /*#__PURE__*/React.createElement(Transaction, {\n      key: transaction.id,\n      transaction: transaction,\n      savedTransaction: transaction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 40\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    totalResults: totalResults,\n    resultsPerPage: resultsPerPage,\n    label: \"Table navigation\",\n    onChange: onPageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })));\n}\n\nexport default Transactions;","map":{"version":3,"sources":["/Users/Zane/bitcoinprojects/luca/5_React/src/components/Transactions.js"],"names":["React","useState","useEffect","Transaction","TableBody","TableContainer","Table","TableHeader","TableCell","TableFooter","Pagination","Transactions","props","page","setPage","data","setData","resultsPerPage","totalResults","transactions","length","onPageChange","p","slice","map","transaction","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,SACIC,SADJ,EAEIC,cAFJ,EAGIC,KAHJ,EAIIC,WAJJ,EAKIC,SALJ,EAMIC,WANJ,EAOIC,UAPJ,QAQS,oBART;;AAUA,SAASC,YAAT,CAAuBC,KAAvB,EAA8B;AAC1B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC,CAH0B,CAK1B;;AACA,QAAMgB,cAAc,GAAG,EAAvB;AACA,QAAMC,YAAY,GAAGN,KAAK,CAACO,YAAN,CAAmBC,MAAxC,CAP0B,CAS1B;;AACA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACrBR,IAAAA,OAAO,CAACQ,CAAD,CAAP;AACH,GAZyB,CAc1B;AACA;;;AACApB,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,OAAO,CAACJ,KAAK,CAACO,YAAN,CAAmBI,KAAnB,CAAyB,CAACV,IAAI,GAAG,CAAR,IAAaI,cAAtC,EAAsDJ,IAAI,GAAGI,cAA7D,CAAD,CAAP;AACH,GAFQ,EAEN,CAACJ,IAAD,CAFM,CAAT;AAII,sBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHA,eAIA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJA,eAKA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALA,eAMA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANA,eAOA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPA,CADJ,CADJ,eAYI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQD,KAAK,CAACO,YAAN,CAAmBK,GAAnB,CAAuBC,WAAW,IAAI;AAClC,wBAAO,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,WAAW,CAACC,EAA9B;AAAkC,MAAA,WAAW,EAAED,WAA/C;AAA4D,MAAA,gBAAgB,EAAEA,WAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,CAFR,CAZJ,CADJ,eAqBI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,YAAY,EAAEP,YADlB;AAEI,IAAA,cAAc,EAAED,cAFpB;AAGI,IAAA,KAAK,EAAC,kBAHV;AAII,IAAA,QAAQ,EAAEI,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CArBJ,CADJ;AAgCH;;AAED,eAAeV,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Transaction } from './Transaction'\n\nimport {\n    TableBody,\n    TableContainer,\n    Table,\n    TableHeader,\n    TableCell,\n    TableFooter,\n    Pagination,\n  } from '@windmill/react-ui'\n\nfunction Transactions (props) {\n    // setup pages control for every table\n    const [page, setPage] = useState(1)\n    const [data, setData] = useState([])\n\n    // pagination setup\n    const resultsPerPage = 10\n    const totalResults = props.transactions.length\n\n    // pagination change control\n    function onPageChange(p) {\n        setPage(p)\n    }\n\n    // on page change, load new sliced data\n    // here you would make another server request for new data\n    useEffect(() => {\n        setData(props.transactions.slice((page - 1) * resultsPerPage, page * resultsPerPage))\n    }, [page])\n\n        return (\n            <TableContainer>\n                <Table>\n                    <TableHeader>\n                        <tr>\n                        <TableCell>Date</TableCell>\n                        <TableCell>From</TableCell>\n                        <TableCell>To</TableCell>\n                        <TableCell>Description</TableCell>\n                        <TableCell>Category</TableCell>\n                        <TableCell>Amount</TableCell>\n                        <TableCell>Actions</TableCell>\n                        </tr>\n                    </TableHeader>\n                    <TableBody>\n                        {\n                            props.transactions.map(transaction => {\n                                return <Transaction key={transaction.id} transaction={transaction} savedTransaction={transaction} />\n                            })\n                        }\n                    </TableBody>\n                </Table>\n                <TableFooter>\n                    <Pagination\n                        totalResults={totalResults}\n                        resultsPerPage={resultsPerPage}\n                        label=\"Table navigation\"\n                        onChange={onPageChange}\n                    />\n                </TableFooter>\n            </TableContainer>\n        )\n    }\n\n    export default Transactions"]},"metadata":{},"sourceType":"module"}