{"ast":null,"code":"var _jsxFileName = \"/Users/Zane/bitcoinprojects/luca/5_React/src/pages/Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport InfoCard from '../components/Cards/InfoCard';\nimport ChartCard from '../components/Chart/ChartCard';\nimport { Doughnut, Line } from 'react-chartjs-2';\nimport ChartLegend from '../components/Chart/ChartLegend';\nimport PageTitle from '../components/Typography/PageTitle';\nimport { Transactions } from '../components/Transactions';\nimport { ChatIcon, CartIcon, MoneyIcon, HomeIcon, EditIcon, TrashIcon, MenuIcon } from '../icons';\nimport RoundIcon from '../components/RoundIcon';\nimport Server from '../utils/demo/server';\nimport response from '../utils/demo/tableData';\nimport axios from 'axios';\nimport { TableBody, TableContainer, Table, TableHeader, TableCell, TableRow, TableFooter, Avatar, Button, Pagination } from '@windmill/react-ui';\nimport { doughnutOptions, lineOptions, doughnutLegends, lineLegends } from '../utils/demo/chartsData';\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transactions: []\n    };\n    this.getTransactions = this.getTransactions.bind(this);\n  }\n\n  componentDidMount() {\n    Server.transactions().then(transactions => {\n      this.setState({\n        transactions: transactions\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"Dashboard\"), /*#__PURE__*/React.createElement(Transactions, {\n      transactions: this.state.transactions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n/*function Dashboard() {\n\n  // setup pages control for every table\n  const [page, setPage] = useState(1)\n  const [data, setData] = useState([])\n\n  // pagination setup\n  const resultsPerPage = 10\n  const totalResults = response.length\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p)\n  }\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n  useEffect(() => {\n    setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage))\n  }, [page])\n\n  return (\n    <>\n      <PageTitle>Dashboard</PageTitle>\n\n      {*/\n\n/* <!-- Cards --> */\n\n/*}\n<div className=\"grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-4\">\n<InfoCard title=\"Block Height\" value={*/\n\n/*blocktip.hash*/\n\n/*\"360,098\"}>\n<RoundIcon\nicon={HomeIcon}\niconColorClass=\"text-orange-500 dark:text-orange-100\"\nbgColorClass=\"bg-orange-100 dark:bg-orange-500\"\nclassName=\"mr-4\"\n/>\n</InfoCard>\n<InfoCard title=\"Account balance\" value=\"615,000,000 sats\">\n<RoundIcon\nicon={MoneyIcon}\niconColorClass=\"text-green-500 dark:text-green-100\"\nbgColorClass=\"bg-green-100 dark:bg-green-500\"\nclassName=\"mr-4\"\n/>\n</InfoCard>\n<InfoCard title=\"New transactions\" value=\"376\">\n<RoundIcon\nicon={CartIcon}\niconColorClass=\"text-blue-500 dark:text-blue-100\"\nbgColorClass=\"bg-blue-100 dark:bg-blue-500\"\nclassName=\"mr-4\"\n/>\n</InfoCard>\n<InfoCard title=\"Unconfirmed\" value=\"35\">\n<RoundIcon\nicon={ChatIcon}\niconColorClass=\"text-teal-500 dark:text-teal-100\"\nbgColorClass=\"bg-teal-100 dark:bg-teal-500\"\nclassName=\"mr-4\"\n/>\n</InfoCard>\n</div>\n<div className=\"grid gap-6 mb-8 md:grid-cols-2\">\n<ChartCard title=\"Expense categories\">\n<Doughnut {...doughnutOptions} />\n<ChartLegend legends={doughnutLegends} />\n</ChartCard>\n<ChartCard title=\"Balance\">\n<Line {...lineOptions} />\n<ChartLegend legends={lineLegends} />\n</ChartCard>\n</div>\n<Transactions />\n<TableContainer>\n<Table>\n<TableHeader>\n<tr>\n<TableCell>Date</TableCell>\n<TableCell>Payee</TableCell>\n<TableCell>Category</TableCell>\n<TableCell>Amount</TableCell>\n<TableCell>Balance</TableCell>\n<TableCell>Actions</TableCell>\n</tr>\n</TableHeader>\n<TableBody>\n{data.map((user, i) => (\n<TableRow key={i}>\n<TableCell>\n<span className=\"text-sm\">{new Date(user.date).toLocaleDateString()}</span>\n</TableCell>\n<TableCell>\n<div className=\"flex items-center text-sm\">\n<Avatar className=\"hidden mr-3 md:block\" src={user.avatar} alt=\"User image\" />\n<div>\n<p className=\"font-semibold\">{user.name}</p>\n<p className=\"text-xs text-gray-600 dark:text-gray-400\">{user.job}</p>\n</div>\n</div>\n</TableCell>\n<TableCell>\n<span className=\"text-sm\"> {user.category}</span>\n</TableCell>\n<TableCell>\n<span className=\"text-sm\">$ {user.amount}</span>\n</TableCell>\n<TableCell>\n<span className=\"text-sm\">$ {user.amount}</span>\n</TableCell>\n<TableCell>\n<div className=\"flex items-center space-x-4\">\n<Button layout=\"link\" size=\"icon\" aria-label=\"Edit\">\n<EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n</Button>\n<Button layout=\"link\" size=\"icon\" aria-label=\"Delete\">\n<MenuIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n</Button>\n</div>\n</TableCell>\n</TableRow>\n))}\n</TableBody>\n</Table>\n<TableFooter>\n<Pagination\ntotalResults={totalResults}\nresultsPerPage={resultsPerPage}\nlabel=\"Table navigation\"\nonChange={onPageChange}\n/>\n</TableFooter>\n</TableContainer>\n</>\n)\n}\nexport default Dashboard*/","map":{"version":3,"sources":["/Users/Zane/bitcoinprojects/luca/5_React/src/pages/Dashboard.js"],"names":["React","useState","useEffect","InfoCard","ChartCard","Doughnut","Line","ChartLegend","PageTitle","Transactions","ChatIcon","CartIcon","MoneyIcon","HomeIcon","EditIcon","TrashIcon","MenuIcon","RoundIcon","Server","response","axios","TableBody","TableContainer","Table","TableHeader","TableCell","TableRow","TableFooter","Avatar","Button","Pagination","doughnutOptions","lineOptions","doughnutLegends","lineLegends","Dashboard","Component","constructor","props","state","transactions","getTransactions","bind","componentDidMount","then","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,iBAA/B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,EAAwCC,QAAxC,EAAkDC,QAAlD,EAA4DC,SAA5D,EAAuEC,QAAvE,QAAuF,UAAvF;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,QANF,EAOEC,WAPF,EAQEC,MARF,EASEC,MATF,EAUEC,UAVF,QAWO,oBAXP;AAaA,SACEC,eADF,EAEEC,WAFF,EAGEC,eAHF,EAIEC,WAJF,QAKO,0BALP;AAOA,eAAe,MAAMC,SAAN,SAAwBnC,KAAK,CAACoC,SAA9B,CAAwC;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE;AADH,KAAb;AAGA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBzB,IAAAA,MAAM,CAACsB,YAAP,GAAsBI,IAAtB,CAA2BJ,YAAY,IAAI;AACzC,WAAKK,QAAL,CAAc;AAACL,QAAAA,YAAY,EAAEA;AAAf,OAAd;AACD,KAFD;AAGD;;AACDM,EAAAA,MAAM,GAAG;AACP,wBACE,uDAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,eAGE,oBAAC,YAAD;AAAc,MAAA,YAAY,EAAE,KAAKP,KAAL,CAAWC,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AArBoD;AAwBvD;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBS;;AAAoB;;;;AAEmB;;AAAiB","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport InfoCard from '../components/Cards/InfoCard'\nimport ChartCard from '../components/Chart/ChartCard'\nimport { Doughnut, Line } from 'react-chartjs-2'\nimport ChartLegend from '../components/Chart/ChartLegend'\nimport PageTitle from '../components/Typography/PageTitle'\nimport { Transactions } from '../components/Transactions'\nimport { ChatIcon, CartIcon, MoneyIcon, HomeIcon, EditIcon, TrashIcon, MenuIcon } from '../icons'\nimport RoundIcon from '../components/RoundIcon'\nimport Server from '../utils/demo/server'\nimport response from '../utils/demo/tableData'\nimport axios from 'axios'\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Button,\n  Pagination,\n} from '@windmill/react-ui'\n\nimport {\n  doughnutOptions,\n  lineOptions,\n  doughnutLegends,\n  lineLegends,\n} from '../utils/demo/chartsData'\n\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      transactions: []\n    }\n    this.getTransactions = this.getTransactions.bind(this)\n  }\n  componentDidMount() {\n    Server.transactions().then(transactions => {\n      this.setState({transactions: transactions})\n    })\n  }\n  render() {\n    return (\n      <>\n        {/*<SearchBar searchYelp={this.searchYelp} />*/}\n        <PageTitle>Dashboard</PageTitle>\n        <Transactions transactions={this.state.transactions} /> \n      </>\n    );\n  }\n}\n\n/*function Dashboard() {\n\n  // setup pages control for every table\n  const [page, setPage] = useState(1)\n  const [data, setData] = useState([])\n\n  // pagination setup\n  const resultsPerPage = 10\n  const totalResults = response.length\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p)\n  }\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n  useEffect(() => {\n    setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage))\n  }, [page])\n\n  return (\n    <>\n      <PageTitle>Dashboard</PageTitle>\n\n      {*//* <!-- Cards --> *//*}\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-4\">\n        <InfoCard title=\"Block Height\" value={*//*blocktip.hash*//*\"360,098\"}>\n          <RoundIcon\n            icon={HomeIcon}\n            iconColorClass=\"text-orange-500 dark:text-orange-100\"\n            bgColorClass=\"bg-orange-100 dark:bg-orange-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"Account balance\" value=\"615,000,000 sats\">\n          <RoundIcon\n            icon={MoneyIcon}\n            iconColorClass=\"text-green-500 dark:text-green-100\"\n            bgColorClass=\"bg-green-100 dark:bg-green-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"New transactions\" value=\"376\">\n          <RoundIcon\n            icon={CartIcon}\n            iconColorClass=\"text-blue-500 dark:text-blue-100\"\n            bgColorClass=\"bg-blue-100 dark:bg-blue-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"Unconfirmed\" value=\"35\">\n          <RoundIcon\n            icon={ChatIcon}\n            iconColorClass=\"text-teal-500 dark:text-teal-100\"\n            bgColorClass=\"bg-teal-100 dark:bg-teal-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n      </div>\n\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2\">\n        <ChartCard title=\"Expense categories\">\n          <Doughnut {...doughnutOptions} />\n          <ChartLegend legends={doughnutLegends} />\n        </ChartCard>\n\n        <ChartCard title=\"Balance\">\n          <Line {...lineOptions} />\n          <ChartLegend legends={lineLegends} />\n        </ChartCard>\n      </div>\n\n      <Transactions />\n\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Date</TableCell>\n              <TableCell>Payee</TableCell>\n              <TableCell>Category</TableCell>\n              <TableCell>Amount</TableCell>\n              <TableCell>Balance</TableCell>\n              <TableCell>Actions</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {data.map((user, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <span className=\"text-sm\">{new Date(user.date).toLocaleDateString()}</span>\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <Avatar className=\"hidden mr-3 md:block\" src={user.avatar} alt=\"User image\" />\n                    <div>\n                      <p className=\"font-semibold\">{user.name}</p>\n                      <p className=\"text-xs text-gray-600 dark:text-gray-400\">{user.job}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\"> {user.category}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex items-center space-x-4\">\n                    <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\">\n                      <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                    </Button>\n                    <Button layout=\"link\" size=\"icon\" aria-label=\"Delete\">\n                      <MenuIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                    </Button>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            label=\"Table navigation\"\n            onChange={onPageChange}\n          />\n        </TableFooter>\n      </TableContainer>\n\n\n    </>\n  )\n}\n\nexport default Dashboard*/\n"]},"metadata":{},"sourceType":"module"}