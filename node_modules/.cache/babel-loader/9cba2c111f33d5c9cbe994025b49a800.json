{"ast":null,"code":"var _jsxFileName = \"/Users/Zane/bitcoinprojects/luca/5_React/src/components/Account.js\";\nimport React from 'react';\nimport { EditIcon, DropdownIcon, TrashIcon } from '../icons';\nimport Server from '../utils/server';\nimport { TableCell, TableRow, Button, Input } from '@windmill/react-ui';\nexport class Account extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editView: false,\n      account: this.props.account,\n      savedAccount: this.props.savedAccount\n    };\n    this.onEditButtonClicked = this.onEditButtonClicked.bind(this);\n    this.onSubmitButtonClicked = this.onSubmitButtonClicked.bind(this);\n    this.updateName = this.updateName.bind(this);\n    this.updateNotes = this.updateNotes.bind(this);\n    this.updateType = this.updateType.bind(this);\n  }\n\n  hasAllRequiredFields() {\n    const account = this.state.account;\n\n    if (!account.name || !account.accounttype) {\n      return false;\n    }\n\n    return true;\n  }\n\n  hasChanges() {\n    const account = this.state.account;\n    const savedAccount = this.state.savedAccount;\n\n    if (!savedAccount) {\n      return false;\n    }\n\n    if (account.name === savedAccount.name && account.notes === savedAccount.notes && account.accounttype === savedAccount.accounttype) {\n      return false;\n    }\n\n    return true;\n  }\n\n  onEditButtonClicked() {\n    console.log(this.state.account.name);\n    this.setState({\n      editView: !this.state.editView\n    });\n  }\n\n  updateName(event) {\n    const account = JSON.parse(JSON.stringify(this.state.account));\n    account.name = event.target.value;\n    this.setState({\n      account: account\n    });\n    console.log(this.state.account.name);\n  }\n\n  updateNotes(event) {\n    const account = JSON.parse(JSON.stringify(this.state.account));\n    account.notes = event.target.value;\n    this.setState({\n      account: account\n    });\n  }\n\n  updateType(event) {\n    const account = JSON.parse(JSON.stringify(this.state.account));\n    account.accounttype = event.target.value;\n    this.setState({\n      account: account\n    });\n  }\n\n  cancelEdit() {\n    this.setState({\n      //artist: this.state.savedArtist,\n      editView: !this.state.editView\n    });\n  }\n\n  onSubmitButtonClicked() {\n    Server.editAccount(JSON.parse(JSON.stringify(this.state.account))).then(account => {\n      this.setState({\n        //account: account,\n        //savedAccount: JSON.parse(JSON.stringify(account)),\n        editView: !this.state.editView\n      });\n    });\n  }\n\n  getAccountType(typeId) {\n    let accountType = typeId;\n\n    switch (accountType) {\n      case 1:\n        return 'Hot Wallet';\n\n      case 2:\n        return 'Vault';\n\n      case 3:\n        return 'Expense';\n\n      case 4:\n        return 'Income';\n\n      default:\n        return '';\n    }\n  }\n\n  renderButtons() {\n    let saveButton, cancelButton, deleteButton;\n\n    if (this.hasChanges() && this.hasAllRequiredFields()) {\n      saveButton = /*#__PURE__*/React.createElement(Button, {\n        \"aria-label\": \"Delete\",\n        block: true,\n        size: \"small\",\n        onClick: this.onSubmitButtonClicked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 20\n        }\n      }, \"Save\");\n    } else {\n      saveButton = /*#__PURE__*/React.createElement(Button, {\n        disabled: true,\n        \"aria-label\": \"Delete\",\n        block: true,\n        size: \"small\",\n        onClick: this.onSubmitButtonClicked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 20\n        }\n      }, \"Save\");\n    }\n\n    if (this.hasChanges()) {\n      // Note: need to revert state on cancel\n      cancelButton = /*#__PURE__*/React.createElement(Button, {\n        layout: \"outline\",\n        \"aria-label\": \"Cancel\",\n        onClick: this.cancelEdit,\n        block: true,\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 22\n        }\n      }, \"Cancel\");\n    } else {\n      cancelButton = /*#__PURE__*/React.createElement(Button, {\n        layout: \"outline\",\n        \"aria-label\": \"Cancel\",\n        onClick: this.onEditButtonClicked,\n        block: true,\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 22\n        }\n      }, \"Cancel\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex items-center space-x-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, saveButton, cancelButton);\n  }\n\n  render() {\n    const editClicked = this.state.editView;\n\n    if (editClicked) {\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: this.props.account.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        className: \"text-sm\",\n        value: this.state.account.name,\n        onChange: this.updateName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        className: \"text-sm\",\n        value: this.state.account.notes,\n        onChange: this.updateNotes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        className: \"text-sm\",\n        value: this.state.account.accounttype,\n        onChange: this.updateType //placeholder={this.getAccountType(this.props.account.accounttype)}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 19\n        }\n      }, this.props.account.balance, \" sats\")), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, this.renderButtons()));\n    }\n\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: this.props.account.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/app/Wallet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 43\n      }\n    }, this.state.account.name))), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }\n    }, this.state.account.notes)), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }, this.getAccountType(this.state.account.accounttype))), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, this.props.account.balance, \" sats\")), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex items-center space-x-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      layout: \"link\",\n      size: \"icon\",\n      \"aria-label\": \"Delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DropdownIcon, {\n      className: \"w-5 h-5\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      layout: \"link\",\n      size: \"icon\",\n      \"aria-label\": \"Edit\",\n      onClick: this.onEditButtonClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      className: \"w-5 h-5\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      layout: \"link\",\n      size: \"icon\",\n      \"aria-label\": \"Delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TrashIcon, {\n      className: \"w-5 h-5\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 23\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Zane/bitcoinprojects/luca/5_React/src/components/Account.js"],"names":["React","EditIcon","DropdownIcon","TrashIcon","Server","TableCell","TableRow","Button","Input","Account","Component","constructor","props","state","editView","account","savedAccount","onEditButtonClicked","bind","onSubmitButtonClicked","updateName","updateNotes","updateType","hasAllRequiredFields","name","accounttype","hasChanges","notes","console","log","setState","event","JSON","parse","stringify","target","value","cancelEdit","editAccount","then","getAccountType","typeId","accountType","renderButtons","saveButton","cancelButton","deleteButton","render","editClicked","id","balance"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { EditIcon, DropdownIcon, TrashIcon } from '../icons'\nimport Server from '../utils/server'\n\nimport {\n    TableCell,\n    TableRow,\n    Button,\n    Input,\n  } from '@windmill/react-ui'\n\nexport class Account extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      editView: false,\n      account: this.props.account,\n      savedAccount: this.props.savedAccount\n    }\n    this.onEditButtonClicked = this.onEditButtonClicked.bind(this)\n    this.onSubmitButtonClicked = this.onSubmitButtonClicked.bind(this)\n\n    this.updateName = this.updateName.bind(this);\n    this.updateNotes = this.updateNotes.bind(this);\n    this.updateType = this.updateType.bind(this);\n  }\n\n  hasAllRequiredFields() {\n    const account = this.state.account;\n    if (!account.name || !account.accounttype) {\n      return false;\n    }\n    return true;\n  }\n\n  hasChanges() {\n    const account = this.state.account;\n    const savedAccount = this.state.savedAccount;\n    if (!savedAccount) {\n      return false;\n    }\n\n    if (account.name === savedAccount.name &&\n        account.notes === savedAccount.notes &&\n        account.accounttype === savedAccount.accounttype) {\n      return false;\n    }\n\n    return true;\n  }\n\n  onEditButtonClicked(){\n    console.log(this.state.account.name)\n    this.setState({\n      editView: !this.state.editView\n      \n    })\n  }\n\n  updateName(event) {\n    const account = JSON.parse(JSON.stringify(this.state.account))\n    account.name = event.target.value\n    this.setState({account: account})\n    console.log(this.state.account.name)\n  }\n\n  updateNotes(event) {\n    const account = JSON.parse(JSON.stringify(this.state.account))\n    account.notes = event.target.value\n    this.setState({account: account})\n  }\n\n  updateType(event) {\n    const account = JSON.parse(JSON.stringify(this.state.account))\n    account.accounttype = event.target.value\n    this.setState({account: account})\n  }\n\n  cancelEdit() {\n    this.setState({\n      //artist: this.state.savedArtist,\n      editView: !this.state.editView\n    });\n  }\n\n  onSubmitButtonClicked() {\n    Server.editAccount(JSON.parse(JSON.stringify(this.state.account))).then(account => {\n      this.setState({\n        //account: account,\n        //savedAccount: JSON.parse(JSON.stringify(account)),\n        editView: !this.state.editView\n      })\n    })\n  }\n\n  getAccountType(typeId) {\n    let accountType = typeId\n    switch (accountType) {\n      case 1:\n        return 'Hot Wallet';\n      case 2: \n        return 'Vault';\n      case 3:\n        return 'Expense';\n      case 4:\n        return 'Income';\n      default:\n        return '';\n    }\n  }\n\n  renderButtons() {\n    let saveButton, cancelButton, deleteButton\n\n    if (this.hasChanges() && this.hasAllRequiredFields()){\n      saveButton = <Button aria-label=\"Delete\" block size=\"small\" onClick={this.onSubmitButtonClicked}>Save</Button>\n    } else {\n      saveButton = <Button disabled aria-label=\"Delete\" block size=\"small\" onClick={this.onSubmitButtonClicked}>Save</Button>\n    }\n\n    if (this.hasChanges()) {\n      // Note: need to revert state on cancel\n      cancelButton = <Button layout=\"outline\" aria-label=\"Cancel\" onClick={this.cancelEdit} block size=\"small\">Cancel</Button>\n    } else {\n      cancelButton = <Button layout=\"outline\" aria-label=\"Cancel\" onClick={this.onEditButtonClicked} block size=\"small\">Cancel</Button>\n    }\n\n    return (\n      <div className=\"flex items-center space-x-4\">\n        {saveButton}\n        {cancelButton}\n      </div>\n    )\n  }\n    \n  render() {\n      const editClicked = this.state.editView\n      if (editClicked) {\n        return (\n          <TableRow key={this.props.account.id}>\n                <TableCell>\n                  <Input \n                    className=\"text-sm\"\n                    value={this.state.account.name}\n                    onChange={this.updateName}\n                  />\n                </TableCell>\n                <TableCell>\n                  <Input \n                    className=\"text-sm\"\n                    value={this.state.account.notes}\n                    onChange={this.updateNotes}\n                  />\n                </TableCell>\n                <TableCell>\n                  <Input \n                    className=\"text-sm\"\n                    value={this.state.account.accounttype}\n                    onChange={this.updateType}\n                    //placeholder={this.getAccountType(this.props.account.accounttype)}\n                  />\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{this.props.account.balance} sats</span>\n                </TableCell>\n                <TableCell>\n                    {this.renderButtons()}\n                </TableCell>\n              </TableRow>\n        )\n      }\n\n        return (\n            <TableRow key={this.props.account.id}>\n                <TableCell>\n                    <a href=\"/app/Wallet\"><p className=\"text-sm\">{this.state.account.name}</p></a>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{this.state.account.notes}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{this.getAccountType(this.state.account.accounttype)}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{this.props.account.balance} sats</span>\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex items-center space-x-4\">\n                    <Button layout=\"link\" size=\"icon\" aria-label=\"Delete\">\n                      <DropdownIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                    </Button>\n                    <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\" onClick={this.onEditButtonClicked}>\n                      <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                    </Button>\n                    <Button layout=\"link\" size=\"icon\" aria-label=\"Delete\">\n                      <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                    </Button>\n                  </div>\n                </TableCell>\n                {/* To Add In Dropdown\n              \n                <TableCell>\n                  <span className=\"text-sm\">{this.props.account.xpub}</span>\n                </TableCell>\n\n                <TableCell>\n                  <span className=\"text-sm\">{new Date(this.props.account.birthday).toLocaleDateString()}</span>\n                </TableCell>\n              \n              */}\n              </TableRow>\n              \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}