{"ast":null,"code":"const Server = {\n  transactions() {\n    return fetch(`http://localhost:2121/transactions`).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (jsonResponse) {\n        return jsonResponse.map(transaction => {\n          return {\n            id: transaction.id,\n            description: transaction.description,\n            category: transaction.category,\n            payee: transaction.payee,\n            block_height: transaction.block_height,\n            txid: transaction.txid,\n            balance_change: transaction.balance_change,\n            account: transaction.account,\n            address: transaction.address,\n            fee: transaction.fee,\n            size: transaction.size\n          };\n        });\n      }\n    });\n  }\n  /*search(term, location, sortBy) {\n      return fetch(\n          `http://localhost:2121/search?term=${term}&location=${location}&sort_by=${sortBy}`\n      ).then(response => {\n          return response.json()\n      }).then(jsonResponse => {\n          if (jsonResponse.businesses) {\n              return jsonResponse.businesses.map(business => {\n                  return {\n                      id: business.id,\n                      imageSrc: business.image_url,\n                      name: business.name,\n                      address: business.location.address1,\n                      city: business.location.city,\n                      state: business.location.state,\n                      zipCode: business.location.zip_code,\n                      category: business.categories[0].title,\n                      rating: business.rating,\n                      reviewCount: business.review_count\n                  }\n              })\n          }\n      })\n  }*/\n\n\n};\nexport default Server;","map":{"version":3,"sources":["/Users/Zane/bitcoinprojects/luca/5_React/src/utils/demo/server.js"],"names":["Server","transactions","fetch","then","response","json","jsonResponse","map","transaction","id","description","category","payee","block_height","txid","balance_change","account","address","fee","size"],"mappings":"AAAA,MAAMA,MAAM,GAAG;AACXC,EAAAA,YAAY,GAAG;AACX,WAAOC,KAAK,CACP,oCADO,CAAL,CAELC,IAFK,CAEAC,QAAQ,IAAI;AACf,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAJM,EAIJF,IAJI,CAICG,YAAY,IAAI;AACpB,UAAIA,YAAJ,EAAkB;AACd,eAAOA,YAAY,CAACC,GAAb,CAAiBC,WAAW,IAAI;AACnC,iBAAO;AACHC,YAAAA,EAAE,EAAED,WAAW,CAACC,EADb;AAEHC,YAAAA,WAAW,EAAEF,WAAW,CAACE,WAFtB;AAGHC,YAAAA,QAAQ,EAAEH,WAAW,CAACG,QAHnB;AAIHC,YAAAA,KAAK,EAAEJ,WAAW,CAACI,KAJhB;AAKHC,YAAAA,YAAY,EAAEL,WAAW,CAACK,YALvB;AAMHC,YAAAA,IAAI,EAAEN,WAAW,CAACM,IANf;AAOHC,YAAAA,cAAc,EAAEP,WAAW,CAACO,cAPzB;AAQHC,YAAAA,OAAO,EAAER,WAAW,CAACQ,OARlB;AASHC,YAAAA,OAAO,EAAET,WAAW,CAACS,OATlB;AAUHC,YAAAA,GAAG,EAAEV,WAAW,CAACU,GAVd;AAWHC,YAAAA,IAAI,EAAEX,WAAW,CAACW;AAXf,WAAP;AAaH,SAdM,CAAP;AAeH;AACJ,KAtBM,CAAP;AAuBH;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;AA1BW,CAAf;AAoDA,eAAenB,MAAf","sourcesContent":["const Server = {\n    transactions() {\n        return fetch(\n            `http://localhost:2121/transactions`\n        ).then(response => {\n            return response.json()\n        }).then(jsonResponse => {\n            if (jsonResponse) {\n                return jsonResponse.map(transaction => {\n                    return {\n                        id: transaction.id,\n                        description: transaction.description,\n                        category: transaction.category,\n                        payee: transaction.payee,\n                        block_height: transaction.block_height,\n                        txid: transaction.txid,\n                        balance_change: transaction.balance_change,\n                        account: transaction.account,\n                        address: transaction.address,\n                        fee: transaction.fee,\n                        size: transaction.size\n                    }\n                })\n            }\n        })\n    },\n    /*search(term, location, sortBy) {\n        return fetch(\n            `http://localhost:2121/search?term=${term}&location=${location}&sort_by=${sortBy}`\n        ).then(response => {\n            return response.json()\n        }).then(jsonResponse => {\n            if (jsonResponse.businesses) {\n                return jsonResponse.businesses.map(business => {\n                    return {\n                        id: business.id,\n                        imageSrc: business.image_url,\n                        name: business.name,\n                        address: business.location.address1,\n                        city: business.location.city,\n                        state: business.location.state,\n                        zipCode: business.location.zip_code,\n                        category: business.categories[0].title,\n                        rating: business.rating,\n                        reviewCount: business.review_count\n                    }\n                })\n            }\n        })\n    }*/\n}\n\nexport default Server"]},"metadata":{},"sourceType":"module"}