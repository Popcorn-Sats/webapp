{"ast":null,"code":"var _jsxFileName = \"/Users/Zane/bitcoinprojects/luca/Client/src/components/Insights/Expenses.js\";\nimport React from 'react';\nimport ChartCard from '../Chart/ChartCard';\nimport { Doughnut } from 'react-chartjs-2';\nimport ChartLegend from '../Chart/ChartLegend';\nexport default class Expenses extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      backgroundColor: []\n    };\n  }\n\n  chartData() {\n    let expenses = {\n      data: {\n        datasets: [{\n          data: [33, 33, 33],\n          backgroundColor: ['#0694a2', '#1c64f2', '#7e3af2'],\n          label: 'Dataset 1'\n        }],\n        labels: ['Coinjoin', 'Fees', 'Hardware']\n      },\n      options: {\n        responsive: true,\n        cutoutPercentage: 80\n      },\n      legend: {\n        display: false\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ChartCard, {\n      title: \"Expenses\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Doughnut, Object.assign({}, chartData(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(ChartLegend, {\n      legends: props.categories,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/Zane/bitcoinprojects/luca/Client/src/components/Insights/Expenses.js"],"names":["React","ChartCard","Doughnut","ChartLegend","Expenses","Component","constructor","props","state","data","backgroundColor","chartData","expenses","datasets","label","labels","options","responsive","cutoutPercentage","legend","display","render","categories"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAEA,eAAe,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,eAAe,EAAE;AAFN,KAAb;AAID;;AAEDC,EAAAA,SAAS,GAAG;AACV,QAAIC,QAAQ,GAAG;AACbH,MAAAA,IAAI,EAAE;AACJI,QAAAA,QAAQ,EAAE,CACR;AACEJ,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CADR;AAEEC,UAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAFnB;AAGEI,UAAAA,KAAK,EAAE;AAHT,SADQ,CADN;AAQJC,QAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,MAAb,EAAqB,UAArB;AARJ,OADO;AAWbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,UAAU,EAAE,IADL;AAEPC,QAAAA,gBAAgB,EAAE;AAFX,OAXI;AAebC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AADH;AAfK,KAAf;AAmBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,uDACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD,oBAAcV,SAAS,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,eAEE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAEJ,KAAK,CAACe,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADJ,CADF;AAQD;;AAxCmD","sourcesContent":["import React from 'react'\n\nimport ChartCard from '../Chart/ChartCard'\nimport { Doughnut } from 'react-chartjs-2'\nimport ChartLegend from '../Chart/ChartLegend'\n\nexport default class Expenses extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: [],\n      backgroundColor: []\n    }\n  }\n\n  chartData() {\n    let expenses = {\n      data: {\n        datasets: [\n          {\n            data: [33, 33, 33],\n            backgroundColor: ['#0694a2', '#1c64f2', '#7e3af2'],\n            label: 'Dataset 1',\n          },\n        ],\n        labels: ['Coinjoin', 'Fees', 'Hardware'],\n      },\n      options: {\n        responsive: true,\n        cutoutPercentage: 80,\n      },\n      legend: {\n        display: false,\n      },\n    }\n  }\n\n  render() {\n    return (\n      <>      \n          <ChartCard title=\"Expenses\">\n            <Doughnut {...chartData()} />\n            <ChartLegend legends={props.categories} />\n          </ChartCard>\n      </>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}